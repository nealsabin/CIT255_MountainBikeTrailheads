@page
@model MountainBikeTrailHeads.Pages.Trailheads.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<style>
    #map {
        height: 600px;
        width: 100%;
    }

    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
        width: 100%;
    }
</style>

@*<h1>Details</h1>*@
<head>
   
</head>
<div class="row col-12">
    <div id="map"></div>
    <script type="text/javascript">
        let map;

        function initMap() {
            const trailheadLocation = { lat: @Html.DisplayFor(model => model.Trailhead.Latitude), lng: @Html.DisplayFor(model => model.Trailhead.Longitude) };
            map = new google.maps.Map(document.getElementById("map"), {
                center: trailheadLocation,
                zoom: 10
            });

            new google.maps.Marker({
                position: trailheadLocation,
                map,
                title: "@Html.DisplayFor(model => model.Trailhead.Name)",
            });

        }
    </script>
    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCOl0srl5AMDDYpU7TkPanrLUVDcNEgD_U&callback=initMap&v=weekly"
            async defer>
    </script>
</div>
<div class="row">
    <div>
        <h4>Trailhead</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Trailhead.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Trailhead.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Trailhead.Rating)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Trailhead.Rating)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Trailhead.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Trailhead.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Trailhead.TrailCount)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Trailhead.TrailCount)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Trailhead.TotalDistance)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Trailhead.TotalDistance)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Trailhead.TotalDescent)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Trailhead.TotalDescent)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Trailhead.CityNear)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Trailhead.CityNear)
            </dd>
        </dl>
    </div>
    <div>
        <a asp-page="./Edit" asp-route-id="@Model.Trailhead.ID">Edit</a> |
        <a asp-page="./Index">Back to List</a>
    </div>
</div>
    